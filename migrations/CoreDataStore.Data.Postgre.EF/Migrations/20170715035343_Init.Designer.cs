// <auto-generated />
using CoreDataStore.Data.Postgre.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CoreDataStore.Data.Postgre.EF.Migrations
{
    [DbContext(typeof(Program.NycLandmarkContextMock))]
    [Migration("20170715035343_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.0-preview2-25794");

            modelBuilder.Entity("CoreDataStore.Domain.Entities.Base.AuditLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ColumnName")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasMaxLength(50);

                    b.Property<DateTime>("EventDateUtc");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasMaxLength(50);

                    b.Property<string>("ImportType")
                        .HasColumnType("varchar")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("NewValue");

                    b.Property<string>("OriginalValue");

                    b.Property<int>("RecordId");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasMaxLength(50);

                    b.Property<string>("UserName")
                        .HasColumnType("varchar")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("AuditLog");
                });

            modelBuilder.Entity("CoreDataStore.Domain.Entities.Landmark", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("BBL");

                    b.Property<long>("BIN_NUMBER");

                    b.Property<int>("BLOCK");

                    b.Property<string>("BOUNDARIES")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasMaxLength(50);

                    b.Property<string>("BoroughID")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasMaxLength(2);

                    b.Property<DateTime?>("CALEN_DATE")
                        .HasColumnType("date");

                    b.Property<bool>("COUNT_BLDG");

                    b.Property<string>("DESIG_ADDR")
                        .HasColumnType("varchar")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("DESIG_DATE")
                        .HasColumnType("date");

                    b.Property<string>("HIST_DISTR")
                        .HasColumnType("varchar")
                        .HasMaxLength(200);

                    b.Property<string>("LAST_ACTIO")
                        .HasColumnType("varchar")
                        .HasMaxLength(50);

                    b.Property<string>("LM_NAME")
                        .HasColumnType("varchar")
                        .HasMaxLength(200);

                    b.Property<string>("LM_TYPE")
                        .HasColumnType("varchar")
                        .HasMaxLength(19);

                    b.Property<int>("LOT");

                    b.Property<string>("LP_NUMBER")
                        .HasColumnType("varchar")
                        .HasMaxLength(10);

                    b.Property<decimal?>("Latitude")
                        .IsRequired()
                        .HasColumnType("decimal(9,6)");

                    b.Property<decimal?>("Longitude")
                        .IsRequired()
                        .HasColumnType("decimal(9,6)");

                    b.Property<bool>("MOST_CURRE");

                    b.Property<string>("NON_BLDG")
                        .HasColumnType("varchar")
                        .HasMaxLength(100);

                    b.Property<long?>("OBJECTID")
                        .IsRequired();

                    b.Property<string>("OTHER_HEAR")
                        .HasColumnType("varchar")
                        .HasMaxLength(200);

                    b.Property<string>("PLUTO_ADDR")
                        .HasColumnType("varchar")
                        .HasMaxLength(200);

                    b.Property<string>("PUBLIC_HEA")
                        .HasColumnType("varchar")
                        .HasMaxLength(200);

                    b.Property<bool>("SECND_BLDG");

                    b.Property<string>("STATUS")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasMaxLength(50);

                    b.Property<string>("STATUS_NOT")
                        .HasColumnType("varchar")
                        .HasMaxLength(200);

                    b.Property<bool>("VACANT_LOT");

                    b.HasKey("Id");

                    b.HasIndex("LP_NUMBER");

                    b.ToTable("Landmark");
                });

            modelBuilder.Entity("CoreDataStore.Domain.Entities.LPCLamppost", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("Block");

                    b.Property<string>("Borough")
                        .HasColumnType("varchar")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(9,6)");

                    b.Property<string>("Located");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(9,6)");

                    b.Property<int?>("Lot");

                    b.Property<int>("PostId");

                    b.Property<string>("SubType")
                        .HasColumnType("varchar")
                        .HasMaxLength(50);

                    b.Property<string>("Type")
                        .HasColumnType("varchar")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("LPCLamppost");
                });

            modelBuilder.Entity("CoreDataStore.Domain.Entities.LPCLocation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<long?>("BBL");

                    b.Property<long?>("BIN");

                    b.Property<int?>("Block");

                    b.Property<string>("Borough")
                        .HasColumnType("varchar")
                        .HasMaxLength(13);

                    b.Property<string>("LPNumber")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasMaxLength(10);

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(9,6)");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(9,6)");

                    b.Property<int?>("Lot");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasMaxLength(200);

                    b.Property<string>("Neighborhood");

                    b.Property<string>("ObjectType")
                        .HasColumnType("varchar")
                        .HasMaxLength(50);

                    b.Property<string>("Street");

                    b.Property<string>("ZipCode")
                        .HasColumnType("varchar")
                        .HasMaxLength(5);

                    b.HasKey("Id");

                    b.HasIndex("LPNumber")
                        .IsUnique();

                    b.ToTable("LPCLocation");
                });

            modelBuilder.Entity("CoreDataStore.Domain.Entities.LPCReport", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Architect")
                        .HasColumnType("varchar")
                        .HasMaxLength(200);

                    b.Property<string>("Borough")
                        .HasColumnType("varchar")
                        .HasMaxLength(20);

                    b.Property<DateTime>("DateDesignated");

                    b.Property<string>("LPCId")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasMaxLength(10);

                    b.Property<string>("LPNumber")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasMaxLength(10);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar");

                    b.Property<string>("ObjectType")
                        .HasColumnType("varchar")
                        .HasMaxLength(50);

                    b.Property<bool>("PhotoStatus");

                    b.Property<string>("PhotoURL")
                        .HasColumnType("varchar")
                        .HasMaxLength(500);

                    b.Property<string>("Street");

                    b.Property<string>("Style")
                        .HasColumnType("varchar")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("LPCReport");
                });

            modelBuilder.Entity("CoreDataStore.Domain.Entities.Pluto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .HasMaxLength(28);

                    b.Property<long>("BBL");

                    b.Property<int>("Block");

                    b.Property<string>("Borough");

                    b.Property<string>("HistDist");

                    b.Property<string>("LandmarkName")
                        .HasColumnName("Landmark")
                        .HasMaxLength(100);

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(9,6)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(9,6)");

                    b.Property<int>("Lot");

                    b.Property<int>("LotArea");

                    b.Property<int>("NumBldgs");

                    b.Property<string>("OwnerName");

                    b.Property<int>("XCoord");

                    b.Property<int>("YCoord");

                    b.Property<int>("YearBuilt");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(5);

                    b.HasKey("Id");

                    b.ToTable("PLUTO");
                });

            modelBuilder.Entity("CoreDataStore.Domain.Entities.Landmark", b =>
                {
                    b.HasOne("CoreDataStore.Domain.Entities.LPCReport", "LPCReport")
                        .WithMany("Landmarks")
                        .HasForeignKey("LP_NUMBER")
                        .HasPrincipalKey("LPNumber");
                });

            modelBuilder.Entity("CoreDataStore.Domain.Entities.LPCLocation", b =>
                {
                    b.HasOne("CoreDataStore.Domain.Entities.LPCReport", "LPCReport")
                        .WithOne("LPCLocation")
                        .HasForeignKey("CoreDataStore.Domain.Entities.LPCLocation", "LPNumber")
                        .HasPrincipalKey("CoreDataStore.Domain.Entities.LPCReport", "LPNumber")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
