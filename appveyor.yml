version: '1.1.{build}'
image: Visual Studio 2017 Preview

init:
- dotnet --info
- ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

environment:
  nodejs_version: "6"
  DOCKER_USER:
    secure: 3KiV+zYEcvwJrrLP+jZRjhY7+3s/SWUNdM8mRH4d8Kw=
  DOCKER_PASS:
    secure: TctN/Vl+j8edPvq1b86mDG4D8CS6DSTWMNyq1TXbB54=
  NG_ENVIRONMENT: "Stage"

cache:
  - src/CoreDataStore.Web/node_modules
  - '%APPDATA%\npm-cache'              # npm cache
  - '%USERPROFILE%\.nuget\packages'    # package cache

services:
  - mssql2016

install:
  - dir
  - dotnet restore
  - dotnet publish src/CoreDataStore.Web/CoreDataStore.Web.csproj -c Release -f netcoreapp2.0 -r win10-x64
  - ps: Install-Product node $env:nodejs_version
  - npm install -g npm@3
  
build_script:  
  - cd src/CoreDataStore.Web
  - npm i
  - npm run clean
  - npm run build
  - cd ../..

before_test:
  - cd C:\Program Files (x86)\Microsoft SQL Server\130\DAC\bin
  - ps: .\SqlPackage.exe /a:import /sf:C:\projects\coredatastore\data\NycLandmarks.bacpac /tdn:NycLandmarks /tsn:APPVYR-WIN\SQL2016

test_script:
  - node --version
  - npm --version
  - docker version
  - dotnet test C:\projects\coredatastore\test\CoreDataStore.Data.SqlServer.Test\CoreDataStore.Data.SqlServer.Test.csproj

deploy_script:  
 - cd C:\projects\coredatastore
 - ps: docker build -f docker/runtime-nanoserver.dockerfile -t "stuartshay/coredatastore:nanoserver-$env:APPVEYOR_BUILD_NUMBER" .
 - ps: docker login -u="$env:DOCKER_USER" -p="$env:DOCKER_PASS"
 - ps: docker push "stuartshay/coredatastore:nanoserver-$env:APPVEYOR_BUILD_NUMBER"

#on_finish:
 - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

